1-TASK

Show unique birth years from patients and order them by ascending.

SELECT DISTINCT YEAR(birth_date) AS birth_year
FROM patients
ORDER BY birth_year


2 -TASK
Show unique first names from the patients table which only occurs once in the list.
For example, if two or more people are named 'John' in the first_name column then don't include their name in the output list. If only 1 person is named 'Leo' then include them in the output.

SELECT first_name
FROM patients
GROUP BY first_name
HAVING COUNT(first_name) = 1

3-TASK

Show patient_id and first_name from patients where their first_name start and ends with 's' and is at least 6 characters long.

SELECT patient_id, first_name
FROM patients
WHERE first_name LIKE 's%s' AND LENGTH(first_name) >= 6

4-TASK

Show patient_id, first_name, last_name from patients whos diagnosis is 'Dementia'.
Primary diagnosis is stored in the admissions table.

SELECT p.patient_id, p.first_name, p.last_name
FROM patients p
JOIN admissions a ON p.patient_id = a.patient_id
WHERE a.diagnosis = 'Dementia'


5-TASK

Display every patient's first_name.
Order the list by the length of each name and then by alphabetically.

SELECT first_name
FROM patients
ORDER BY LENGTH(first_name), first_name

6-TASK
Show the total amount of male patients and the total amount of female patients in the patients table.
Display the two results in the same row.

SELECT 
  SUM(CASE WHEN gender = 'M' THEN 1 ELSE 0 END) AS male_count,
  SUM(CASE WHEN gender = 'F' THEN 1 ELSE 0 END) AS female_count
FROM patients


7-TASK

Show first and last name, allergies from patients which have allergies to either 'Penicillin' or 'Morphine'. Show results ordered ascending by allergies then by first_name then by last_name.

SELECT first_name, last_name, allergies
FROM patients
WHERE allergies = 'Penicillin' OR allergies = 'Morphine'
ORDER BY allergies ASC, first_name ASC, last_name ASC

8-TASK

Show patient_id, diagnosis from admissions. Find patients admitted multiple times for the same diagnosis.

SELECT patient_id, diagnosis
FROM admissions
GROUP BY patient_id, diagnosis
HAVING COUNT(*) > 1


9-TASK

Show the city and the total number of patients in the city.
Order from most to least patients and then by city name ascending.

SELECT city, COUNT(*) AS total_patients
FROM patients
GROUP BY city
ORDER BY total_patients DESC, city ASC


10-TASK

Show first name, last name and role of every person that is either patient or doctor.
The roles are either "Patient" or "Doctor"

SELECT first_name, last_name, 'Patient' AS role
FROM patients
UNION ALL
SELECT first_name, last_name, 'Doctor' AS role
FROM doctors


11-TASK

Show all allergies ordered by popularity. Remove NULL values from query.

SELECT allergies, COUNT(*) AS total_patients
FROM patients
WHERE allergies IS NOT NULL
GROUP BY allergies
ORDER BY total_patients DESC


12-TASK

Show all patient's first_name, last_name, and birth_date who were born in the 1970s decade. Sort the list starting from the earliest birth_date.

SELECT first_name, last_name, birth_date
FROM patients
WHERE birth_date >= '1970-01-01' AND birth_date <= '1979-12-31'
ORDER BY birth_date ASC


13-TASK

We want to display each patient's full name in a single column. Their last_name in all upper letters must appear first, then first_name in all lower case letters. Separate the last_name and first_name with a comma. Order the list by the first_name in decending order
EX: SMITH,jane

SELECT UPPER(last_name) || ',' || LOWER(first_name) AS full_name
FROM patients
ORDER BY first_name DESC


14-TASK

Show the province_id(s), sum of height; where the total sum of its patient's height is greater than or equal to 7,000.

SELECT province_id, SUM(height) AS total_height
FROM patients
GROUP BY province_id
HAVING SUM(height) >= 7000


15-TASK

Show the difference between the largest weight and smallest weight for patients with the last name 'Maroni'

SELECT MAX(weight) - MIN(weight) AS weight_difference
FROM patients
WHERE last_name = 'Maroni'


16-TASK

Show all of the days of the month (1-31) and how many admission_dates occurred on that day. Sort by the day with most admissions to least admissions.

SELECT DAY(admission_date) AS day_of_month, 
COUNT(*) AS total_admissions 
FROM admissions  
GROUP BY day_of_month 
ORDER BY total_admissions DESC


17-TASK

Show all columns for patient_id 542's most recent admission_date.

SELECT *
FROM admissions
WHERE patient_id = 542 AND admission_date = (
  SELECT MAX(admission_date) 
  FROM admissions 
  WHERE patient_id = 542)


18-TASK

Show patient_id, attending_doctor_id, and diagnosis for admissions that match one of the two criteria:
1. patient_id is an odd number and attending_doctor_id is either 1, 5, or 19.
2. attending_doctor_id contains a 2 and the length of patient_id is 3 characters.

SELECT patient_id, attending_doctor_id, diagnosis
FROM admissions
WHERE (patient_id %2 = 1 AND (attending_doctor_id = 1 OR attending_doctor_id = 5 OR attending_doctor_id = 19)) OR (CAST(attending_doctor_id AS TEXT) LIKE '%2%' AND LENGTH(CAST(patient_id AS TEXT)) = 3)


19-TASK

Show first_name, last_name, and the total number of admissions attended for each doctor.

Every admission has been attended by a doctor.

SELECT d.first_name, d.last_name, 
COUNT(a.admission_date) AS total_admissions
FROM doctors d
JOIN admissions a ON d.doctor_id = a.attending_doctor_id
GROUP BY d.first_name, d.last_name


20-TASK

For each doctor, display their id, full name, and the first and last admission date they attended.

SELECT d.doctor_id, 
    d.first_name || ' '|| d.last_name AS full_name, 
    MIN(a.admission_date) AS first_admission, 
    MAX(a.admission_date) AS last_admission
FROM doctors d
JOIN admissions a ON d.doctor_id = a.attending_doctor_id
GROUP BY d.doctor_id, d.first_name, d.last_name

21 - TASK

Display the total amount of patients for each province. Order by descending.

SELECT province_names.province_name, COUNT(*) AS total_patients
FROM patients
JOIN province_names ON patients.province_id = province_names.province_id
GROUP BY province_names.province_name
ORDER BY total_patients DESC

22-TASK

For every admission, display the patient's full name, their admission diagnosis, and their doctor's full name who diagnosed their problem.

SELECT 
    p.first_name || ' ' || p.last_name AS patient_full_name, 
    a.diagnosis, 
    d.first_name || ' ' || d.last_name AS doctor_full_name
FROM admissions a
JOIN patients p ON a.patient_id = p.patient_id
JOIN doctors d ON a.attending_doctor_id = d.doctor_id


23-TASK

display the first name, last name and number of duplicate patients based on their first name and last name.

Ex: A patient with an identical name can be considered a duplicate. 

SELECT first_name, last_name, COUNT(*) AS duplicate_count
FROM patients
GROUP BY first_name, last_name
HAVING COUNT(*) > 1


24-TASK

Display patient's full name,
height in the units feet rounded to 1 decimal,
weight in the unit pounds rounded to 0 decimals,
birth_date,
gender non abbreviated.

Convert CM to feet by dividing by 30.48.
Convert KG to pounds by multiplying by 2.205.

SELECT first_name || ' ' || last_name AS full_name,
ROUND(height / 30.48, 1) AS height_in_feet,
ROUND(weight * 2.205, 0) AS weight_in_pounds,
birth_date,
CASE 
    WHEN gender = 'M' THEN 'Male' 
    WHEN gender = 'F' THEN 'Female' 
    ELSE 'Unknown' 
END AS gender
FROM patients


25-TASK

Show patient_id, first_name, last_name from patients whose does not have any records in the admissions table. (Their patient_id does not exist in any admissions.patient_id rows.)

SELECT patient_id, first_name, last_name
FROM patients
WHERE patient_id NOT IN (SELECT patient_id FROM admissions)


26-TASK

Display a single row with max_visits, min_visits, average_visits where the maximum, minimum and average number of admissions per day is calculated. Average is rounded to 2 decimal places.

SELECT 
MAX(daily_visits) AS max_visits, 
MIN(daily_visits) AS min_visits, 
ROUND(AVG(daily_visits), 2) AS average_visits
FROM (
SELECT COUNT(*) AS daily_visits
FROM admissions
GROUP BY admission_date) AS visit_counts


